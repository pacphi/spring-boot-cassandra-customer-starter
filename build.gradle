buildscript {
	ext {
		gitPropertiesPluginVersion = '2.0.0-beta1'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gitPropertiesPluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.gorylenko.gradle-git-properties'

group = 'io.pivotal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
	dateFormatTimeZone = "UTC"
	dotGitDirectory = "${project.rootDir}/.."
}

jacoco { 
	toolVersion = "0.8.2" 
}
    
jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
		csv.enabled = false
	}
	onlyIf = {
		true
	}
	doFirst {
		executionData = files(executionData.findAll {
			it.exists()
		})
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

tasks.withType(Test) {
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        jvmArgs += ["--add-opens", "java.base/java.lang=ALL-UNNAMED"]
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-hateoas') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
	}
	implementation('org.atteo:evo-inflector:1.2.2')
	implementation('io.projectreactor:reactor-core:3.2.3.RELEASE')
	implementation('com.google.guava:guava:19.0')
	implementation('commons-io:commons-io:2.6')
	implementation('org.apache.commons:commons-lang3:3.8.1')
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    testImplementation('org.mockito:mockito-core:3.11.2')
    testImplementation('org.mockito:mockito-junit-jupiter:2.23.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
	testImplementation('org.testcontainers:cassandra:1.10.4')
	testImplementation('io.dropwizard.metrics:metrics-core:3.2.6')
	testImplementation('io.projectreactor:reactor-test:3.2.3.RELEASE')
}

bootRun {
	// support passing -Dsystem.property=value to bootRun task
	systemProperties = System.properties
}

check.dependsOn jacocoTestReport